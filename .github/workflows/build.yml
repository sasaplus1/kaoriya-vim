name: build

on:
  - push
  - pull_request

jobs:
  build:
    name: build package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container:
          - ubuntu:18.04
          - ubuntu:20.04
    env:
      DEBIAN_FRONTEND: nointeractive
      DOCKER_BUILDKIT: 1
    steps:
      - uses: actions/checkout@v2
      - run: sudo apt --yes update
      - run: sudo apt --yes install fakeroot
      - run: >
          docker build
          --tag ${{ github.repository }}
          --build-arg 'DEBIAN_FRONTEND=noninteractive'
          --build-arg "configurations=${configurations}"
          --build-arg "image=${image}"
          --build-arg "setup=${setup}"
          .
        env:
          configurations: >-
            --enable-fail-if-missing
            --disable-smack
            --disable-selinux
            --disable-xsmp
            --disable-xsmp-interact
            --enable-luainterp=dynamic
            --enable-pythoninterp=dynamic
            --enable-python3interp=dynamic
            --enable-cscope
            --disable-netbeans
            --enable-terminal
            --enable-multibyte
            --disable-rightleft
            --disable-arabic
            --enable-gui=no
            --with-compiledby=sasa+1
            --with-features=huge
            --with-luajit
            --without-x
            --with-tlib=ncurses
          image: ${{ matrix.container }}
          setup: >-
            apt --yes update &&
            apt --yes install
            autoconf git make
            build-essential libncurses-dev
            gettext
            lua5.1 liblua5.1-dev luajit libluajit-5.1-dev
            python python-dev
            python3 python3-dev &&
            apt-get --yes clean &&
            rm -rf /var/lib/apt/lists/*
      - run: docker run --detach --init --rm ${{ github.repository }} tail -f /dev/null
      - run: docker cp $(docker ps -q):/tmp/vim.tar.gz .
      - run: docker cp $(docker ps -q):/root/vim-kaoriya/VERSION .
      - run: docker stop $(docker ps -q)
      - id: vim
        run: echo "::set-output name=version::$(printf -- '%b' 'all:\n\t@printf -- $(VIM_VER)' | make -f ./VERSION -f -)"
      - run: tar fvx ./vim.tar.gz
      - run: ldd ./vim/bin/vim
      - run: ./vim/bin/vim --version
      - run: mkdir -p ./deb/DEBIAN ./deb/usr/local
      - run: cp -fr ./vim/* ./deb/usr/local
      - run: >-
          printf -- 'Version: %s-%s' "${vim_version}" "${deb_version}" >> ./deb/DEBIAN/control
        env:
          vim_version: ${{ steps.vim.outputs.version }}
          deb_version: ${{ github.run_number }}
      - run: cp ./control ./deb/DEBIAN
      - run: cat ./deb/DEBIAN/control
      - run: fakeroot dpkg-deb --build deb .
      - id: deb
        run: echo "::set-output name=filename::$(ls -1 kaoriya-vim*.deb)"
      - run: dpkg -c "${deb}"
        env:
          deb: ${{ steps.deb.outputs.filename }}
      - uses: actions/upload-artifact@master
        with:
          name: ${{ steps.deb.outputs.filename }}
          path: ${{ steps.deb.outputs.filename }}
